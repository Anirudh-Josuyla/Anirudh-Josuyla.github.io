# Install packages if not installed
install.packages("tidyverse")  # Includes dplyr, ggplot2, tidyr, etc.
install.packages("readr")      # For reading CSV files
# Load the libraries
library(tidyverse)
library(readr)
# Read the transaction data and purchase data
transactions <- read_csv("qvi_transactions.csv")
# Load necessary libraries
library(readr)
library(readxl)
# Read the QVI purchase behavior data (CSV file)
purchase_behaviour <- read_csv("QVI_purchase_behaviour.csv")
# Read the QVI transaction data (Excel file)
transaction_data <- read_excel("QVI_transaction_data.xlsx")
setwd("/Users/anirudhjosuyla/Documents/Chip_Analysis")
list.files()
library(readxl)
# Load the QVI transaction data (Excel file)
transaction_data <- read_excel("QVI_transaction_data.xlsx")
list.files()
# Load the QVI transaction data (Excel file)
transaction_data <- read_excel("QVI_transaction_data.xlsx")
setwd("/Users/anirudhjosuyla/Documents/Chip_Analysis/Chip_Analysis")
list.files()
library(readxl)
# Load the QVI transaction data (Excel file)
transaction_data <- read_excel("QVI_transaction_data.xlsx")
# View the first few rows of the transaction data
head(transaction_data)
library(readr)
# Load the QVI purchase behavior data (CSV file)
purchase_behaviour <- read_csv("QVI_purchase_behaviour.csv")
# View the first few rows of the purchase data
head(purchase_behaviour)
# Check the structure of the datasets
str(transaction_data)
str(purchase_behaviour)
# Check for any missing or NA values
sum(is.na(transaction_data))
sum(is.na(purchase_behaviour))
# Summary of the datasets
summary(transaction_data)
summary(purchase_behaviour)
# Assuming 'customer_id' is a common column for merging
merged_data <- merge(transaction_data, purchase_behaviour, by = "customer_id")
# Check column names in the transaction data
colnames(transaction_data)
# Check column names in the purchase behavior data
colnames(purchase_behaviour)
# Merge the datasets using LYLTY_CARD_NBR as the common column
merged_data <- merge(transaction_data, purchase_behaviour, by = "LYLTY_CARD_NBR")
# View the first few rows of the merged data
head(merged_data)
# Check for missing values in the merged data
sum(is.na(merged_data))
# View a summary of the merged data
summary(merged_data)
# Example: Check total sales by LIFESTAGE and PREMIUM_CUSTOMER
segment_sales <- merged_data %>%
group_by(LIFESTAGE, PREMIUM_CUSTOMER) %>%
summarise(total_sales = sum(TOT_SALES, na.rm = TRUE)) %>%
arrange(desc(total_sales))
# View the segment sales
print(segment_sales)
# Create a bar plot to visualize total sales by LIFESTAGE and PREMIUM_CUSTOMER
library(ggplot2)
ggplot(segment_sales, aes(x = LIFESTAGE, y = total_sales, fill = PREMIUM_CUSTOMER)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Total Sales by LIFESTAGE and PREMIUM_CUSTOMER",
x = "LIFESTAGE",
y = "Total Sales") +
theme_minimal()
# Check total sales by product
product_sales <- merged_data %>%
group_by(PROD_NAME) %>%
summarise(total_sales = sum(TOT_SALES, na.rm = TRUE),
total_quantity = sum(PROD_QTY, na.rm = TRUE)) %>%
arrange(desc(total_sales))
# View top-selling products
head(product_sales)
# Calculate average sales per customer for each segment
average_sales <- merged_data %>%
group_by(LIFESTAGE, PREMIUM_CUSTOMER) %>%
summarise(average_sales_per_customer = mean(TOT_SALES, na.rm = TRUE)) %>%
arrange(desc(average_sales_per_customer))
# View average sales per customer
print(average_sales)
# Save your plot to a file (e.g., as a PNG)
ggsave("sales_by_segment.png")
# Save your merged data as a CSV file
write.csv(merged_data, "merged_data.csv", row.names = FALSE)
str(transactionData)
exiy
exit
